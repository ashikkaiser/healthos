[{"/Users/ashik/Desktop/health os/helthos/src/index.js":"1","/Users/ashik/Desktop/health os/helthos/src/App.js":"2","/Users/ashik/Desktop/health os/helthos/src/serviceWorker.js":"3","/Users/ashik/Desktop/health os/helthos/src/store/index.js":"4","/Users/ashik/Desktop/health os/helthos/src/components/NonAuthLayout.js":"5","/Users/ashik/Desktop/health os/helthos/src/routes/middleware/Authmiddleware.js":"6","/Users/ashik/Desktop/health os/helthos/src/routes/allRoutes.js":"7","/Users/ashik/Desktop/health os/helthos/src/store/reducers.js":"8","/Users/ashik/Desktop/health os/helthos/src/store/sagas.js":"9","/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/index.js":"10","/Users/ashik/Desktop/health os/helthos/src/store/actions.js":"11","/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/Header.js":"12","/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/Sidebar.js":"13","/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/Footer.js":"14","/Users/ashik/Desktop/health os/helthos/src/store/layout/reducer.js":"15","/Users/ashik/Desktop/health os/helthos/src/store/layout/saga.js":"16","/Users/ashik/Desktop/health os/helthos/src/pages/Dashboard/index.js":"17","/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/Rightbar.js":"18","/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/Login.js":"19","/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/Register.js":"20","/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/ForgetPassword.js":"21","/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/Logout.js":"22","/Users/ashik/Desktop/health os/helthos/src/pages/Products/Generic/index.js":"23","/Users/ashik/Desktop/health os/helthos/src/pages/Products/Form/index.js":"24","/Users/ashik/Desktop/health os/helthos/src/store/auth/login/reducer.js":"25","/Users/ashik/Desktop/health os/helthos/src/store/auth/login/saga.js":"26","/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/reducer.js":"27","/Users/ashik/Desktop/health os/helthos/src/store/auth/register/saga.js":"28","/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/saga.js":"29","/Users/ashik/Desktop/health os/helthos/src/store/product/Form/reducer.js":"30","/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/reducer.js":"31","/Users/ashik/Desktop/health os/helthos/src/store/product/Form/saga.js":"32","/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/reducer.js":"33","/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/saga.js":"34","/Users/ashik/Desktop/health os/helthos/src/store/product/Group/reducer.js":"35","/Users/ashik/Desktop/health os/helthos/src/store/product/Category/reducer.js":"36","/Users/ashik/Desktop/health os/helthos/src/store/product/Group/saga.js":"37","/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/reducer.js":"38","/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/reducer.js":"39","/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/saga.js":"40","/Users/ashik/Desktop/health os/helthos/src/store/product/Category/saga.js":"41","/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/reducer.js":"42","/Users/ashik/Desktop/health os/helthos/src/store/auth/register/reducer.js":"43","/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/saga.js":"44","/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/saga.js":"45","/Users/ashik/Desktop/health os/helthos/src/store/product/Product/reducer.js":"46","/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/saga.js":"47","/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/saga.js":"48","/Users/ashik/Desktop/health os/helthos/src/store/product/Product/saga.js":"49","/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/reducer.js":"50","/Users/ashik/Desktop/health os/helthos/src/pages/Products/Unit/index.js":"51","/Users/ashik/Desktop/health os/helthos/src/pages/Products/Providers/index.js":"52","/Users/ashik/Desktop/health os/helthos/src/pages/Products/Category/index.js":"53","/Users/ashik/Desktop/health os/helthos/src/pages/Products/Groups/index.js":"54","/Users/ashik/Desktop/health os/helthos/src/pages/Products/SubGroup/index.js":"55","/Users/ashik/Desktop/health os/helthos/src/pages/Products/Product/index.js":"56","/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Suppliers/index.js":"57","/Users/ashik/Desktop/health os/helthos/src/pages/Admin/Employe/index.js":"58","/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/action.js":"59","/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/actionTypes.js":"60","/Users/ashik/Desktop/health os/helthos/src/store/product/Product/action.js":"61","/Users/ashik/Desktop/health os/helthos/src/store/product/Product/actionTypes.js":"62","/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/action.js":"63","/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/actions.js":"64","/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/actionTypes.js":"65","/Users/ashik/Desktop/health os/helthos/src/store/auth/register/actionTypes.js":"66","/Users/ashik/Desktop/health os/helthos/src/store/product/Category/actionTypes.js":"67","/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/action.js":"68","/Users/ashik/Desktop/health os/helthos/src/store/product/Group/action.js":"69","/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/action.js":"70","/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/actionTypes.js":"71","/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/actionTypes.js":"72","/Users/ashik/Desktop/health os/helthos/src/store/product/Category/action.js":"73","/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/actionTypes.js":"74","/Users/ashik/Desktop/health os/helthos/src/store/product/Group/actionTypes.js":"75","/Users/ashik/Desktop/health os/helthos/src/helpers/backend_helper.js":"76","/Users/ashik/Desktop/health os/helthos/src/helpers/fakebackend_helper.js":"77","/Users/ashik/Desktop/health os/helthos/src/helpers/firebase_helper.js":"78","/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/action.js":"79","/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/actionTypes.js":"80","/Users/ashik/Desktop/health os/helthos/src/store/product/Form/action.js":"81","/Users/ashik/Desktop/health os/helthos/src/store/product/Form/actionTypes.js":"82","/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/actions.js":"83","/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/actionTypes.js":"84","/Users/ashik/Desktop/health os/helthos/src/store/auth/register/actions.js":"85","/Users/ashik/Desktop/health os/helthos/src/store/auth/login/actions.js":"86","/Users/ashik/Desktop/health os/helthos/src/store/auth/login/actionTypes.js":"87","/Users/ashik/Desktop/health os/helthos/src/components/Common/Breadcrumb.js":"88","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductFormModel.js":"89","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductGenericModel.js":"90","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductSubgroupModel.js":"91","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductModel.js":"92","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductGroupsModel.js":"93","/Users/ashik/Desktop/health os/helthos/src/helpers/url_helper.js":"94","/Users/ashik/Desktop/health os/helthos/src/helpers/api_helper.js":"95","/Users/ashik/Desktop/health os/helthos/src/helpers/api.js":"96","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductCategoryModel.js":"97","/Users/ashik/Desktop/health os/helthos/src/components/Models/Admin/EmployeeModel.js":"98","/Users/ashik/Desktop/health os/helthos/src/components/Models/Inventory/SupplierModel.js":"99","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductProvidersModel.js":"100","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductUnitModel.js":"101","/Users/ashik/Desktop/health os/helthos/src/config.js":"102","/Users/ashik/Desktop/health os/helthos/src/store/layout/actions.js":"103","/Users/ashik/Desktop/health os/helthos/src/store/layout/actionTypes.js":"104","/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/SidebarContent.js":"105","/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js":"106","/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js":"107","/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js":"108","/Users/ashik/Desktop/health os/helthos/src/helpers/jwt-token-access/accessToken.js":"109","/Users/ashik/Desktop/health os/helthos/src/i18n.js":"110","/Users/ashik/Desktop/health os/helthos/src/common/languages.js":"111","/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Sales/index.js":"112","/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Sales/component/sales.js":"113","/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Sales/component/salseReturn.js":"114","/Users/ashik/Desktop/health os/helthos/src/components/Models/Inventory/Sales/SalesModel.js":"115","/Users/ashik/Desktop/health os/helthos/src/pages/Accounts/Customer/index.js":"116","/Users/ashik/Desktop/health os/helthos/src/components/Models/Accounts/CustomerModel.jsx":"117","/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/action.js":"118","/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/actionTypes.js":"119","/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/reducer.js":"120","/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/saga.js":"121"},{"size":663,"mtime":1632841376475,"results":"122","hashOfConfig":"123"},{"size":1625,"mtime":1632840297198,"results":"124","hashOfConfig":"123"},{"size":5315,"mtime":1611725068000,"results":"125","hashOfConfig":"123"},{"size":452,"mtime":1610831980000,"results":"126","hashOfConfig":"123"},{"size":788,"mtime":1611734968000,"results":"127","hashOfConfig":"123"},{"size":760,"mtime":1612681040000,"results":"128","hashOfConfig":"123"},{"size":2246,"mtime":1645541897416,"results":"129","hashOfConfig":"123"},{"size":1042,"mtime":1645896203338,"results":"130","hashOfConfig":"123"},{"size":1181,"mtime":1645896231988,"results":"131","hashOfConfig":"123"},{"size":3177,"mtime":1632729582234,"results":"132","hashOfConfig":"123"},{"size":630,"mtime":1645896179541,"results":"133","hashOfConfig":"123"},{"size":9366,"mtime":1632728954955,"results":"134","hashOfConfig":"123"},{"size":1580,"mtime":1613549464000,"results":"135","hashOfConfig":"123"},{"size":609,"mtime":1611826534000,"results":"136","hashOfConfig":"123"},{"size":1764,"mtime":1632840423645,"results":"137","hashOfConfig":"123"},{"size":4814,"mtime":1612932132000,"results":"138","hashOfConfig":"123"},{"size":328,"mtime":1632819073925,"results":"139","hashOfConfig":"123"},{"size":13370,"mtime":1613110400000,"results":"140","hashOfConfig":"123"},{"size":9504,"mtime":1613557186000,"results":"141","hashOfConfig":"123"},{"size":7227,"mtime":1613557188000,"results":"142","hashOfConfig":"123"},{"size":4862,"mtime":1613557230000,"results":"143","hashOfConfig":"123"},{"size":464,"mtime":1613551950000,"results":"144","hashOfConfig":"123"},{"size":4573,"mtime":1632916355627,"results":"145","hashOfConfig":"123"},{"size":4436,"mtime":1632916623272,"results":"146","hashOfConfig":"123"},{"size":770,"mtime":1608871414000,"results":"147","hashOfConfig":"123"},{"size":2655,"mtime":1606551278000,"results":"148","hashOfConfig":"123"},{"size":734,"mtime":1606551278000,"results":"149","hashOfConfig":"123"},{"size":1512,"mtime":1608874666000,"results":"150","hashOfConfig":"123"},{"size":1900,"mtime":1606551278000,"results":"151","hashOfConfig":"123"},{"size":542,"mtime":1632908137970,"results":"152","hashOfConfig":"123"},{"size":648,"mtime":1613550708000,"results":"153","hashOfConfig":"123"},{"size":1124,"mtime":1632908130492,"results":"154","hashOfConfig":"123"},{"size":573,"mtime":1632906454265,"results":"155","hashOfConfig":"123"},{"size":1206,"mtime":1632908125104,"results":"156","hashOfConfig":"123"},{"size":550,"mtime":1632908969407,"results":"157","hashOfConfig":"123"},{"size":580,"mtime":1632908781699,"results":"158","hashOfConfig":"123"},{"size":1146,"mtime":1632909840416,"results":"159","hashOfConfig":"123"},{"size":577,"mtime":1632909631397,"results":"160","hashOfConfig":"123"},{"size":577,"mtime":1632909437598,"results":"161","hashOfConfig":"123"},{"size":1227,"mtime":1632909671853,"results":"162","hashOfConfig":"123"},{"size":1227,"mtime":1632908700073,"results":"163","hashOfConfig":"123"},{"size":541,"mtime":1632915403296,"results":"164","hashOfConfig":"123"},{"size":903,"mtime":1608874676000,"results":"165","hashOfConfig":"123"},{"size":1227,"mtime":1632909484823,"results":"166","hashOfConfig":"123"},{"size":1434,"mtime":1613550708000,"results":"167","hashOfConfig":"123"},{"size":556,"mtime":1632997881702,"results":"168","hashOfConfig":"123"},{"size":1119,"mtime":1632915450242,"results":"169","hashOfConfig":"123"},{"size":1227,"mtime":1633168493775,"results":"170","hashOfConfig":"123"},{"size":1200,"mtime":1632997941397,"results":"171","hashOfConfig":"123"},{"size":568,"mtime":1633248108833,"results":"172","hashOfConfig":"123"},{"size":4262,"mtime":1632916311199,"results":"173","hashOfConfig":"123"},{"size":4347,"mtime":1633004541873,"results":"174","hashOfConfig":"123"},{"size":4358,"mtime":1632916368754,"results":"175","hashOfConfig":"123"},{"size":4319,"mtime":1632916346873,"results":"176","hashOfConfig":"123"},{"size":4651,"mtime":1633004523429,"results":"177","hashOfConfig":"123"},{"size":5642,"mtime":1633001912821,"results":"178","hashOfConfig":"123"},{"size":4654,"mtime":1633248196471,"results":"179","hashOfConfig":"123"},{"size":4576,"mtime":1633249325229,"results":"180","hashOfConfig":"123"},{"size":672,"mtime":1633168521654,"results":"181","hashOfConfig":"123"},{"size":309,"mtime":1633165401991,"results":"182","hashOfConfig":"123"},{"size":654,"mtime":1632997838619,"results":"183","hashOfConfig":"123"},{"size":297,"mtime":1632997780893,"results":"184","hashOfConfig":"123"},{"size":600,"mtime":1632915337242,"results":"185","hashOfConfig":"123"},{"size":494,"mtime":1613550708000,"results":"186","hashOfConfig":"123"},{"size":261,"mtime":1632915267111,"results":"187","hashOfConfig":"123"},{"size":172,"mtime":1606551278000,"results":"188","hashOfConfig":"123"},{"size":309,"mtime":1632907132341,"results":"189","hashOfConfig":"123"},{"size":672,"mtime":1632910084123,"results":"190","hashOfConfig":"123"},{"size":618,"mtime":1632910015796,"results":"191","hashOfConfig":"123"},{"size":670,"mtime":1632910127613,"results":"192","hashOfConfig":"123"},{"size":192,"mtime":1613550708000,"results":"193","hashOfConfig":"123"},{"size":309,"mtime":1632909363333,"results":"194","hashOfConfig":"123"},{"size":694,"mtime":1632907850258,"results":"195","hashOfConfig":"123"},{"size":309,"mtime":1632909517811,"results":"196","hashOfConfig":"123"},{"size":273,"mtime":1632908854280,"results":"197","hashOfConfig":"123"},{"size":1909,"mtime":1645896254371,"results":"198","hashOfConfig":"123"},{"size":4375,"mtime":1645537234827,"results":"199","hashOfConfig":"123"},{"size":4879,"mtime":1612709514000,"results":"200","hashOfConfig":"123"},{"size":667,"mtime":1632906274107,"results":"201","hashOfConfig":"123"},{"size":309,"mtime":1632906152242,"results":"202","hashOfConfig":"123"},{"size":603,"mtime":1632836218930,"results":"203","hashOfConfig":"123"},{"size":261,"mtime":1632835013583,"results":"204","hashOfConfig":"123"},{"size":489,"mtime":1606551278000,"results":"205","hashOfConfig":"123"},{"size":175,"mtime":1606551278000,"results":"206","hashOfConfig":"123"},{"size":439,"mtime":1606551278000,"results":"207","hashOfConfig":"123"},{"size":789,"mtime":1606551278000,"results":"208","hashOfConfig":"123"},{"size":270,"mtime":1606551278000,"results":"209","hashOfConfig":"123"},{"size":917,"mtime":1611898926000,"results":"210","hashOfConfig":"123"},{"size":5030,"mtime":1632993490785,"results":"211","hashOfConfig":"123"},{"size":5115,"mtime":1645537162489,"results":"212","hashOfConfig":"123"},{"size":7577,"mtime":1645537445570,"results":"213","hashOfConfig":"123"},{"size":25761,"mtime":1645540508224,"results":"214","hashOfConfig":"123"},{"size":3894,"mtime":1645537436404,"results":"215","hashOfConfig":"123"},{"size":1603,"mtime":1611922078000,"results":"216","hashOfConfig":"123"},{"size":984,"mtime":1611922078000,"results":"217","hashOfConfig":"123"},{"size":1423,"mtime":1645896100623,"results":"218","hashOfConfig":"123"},{"size":5059,"mtime":1645537450473,"results":"219","hashOfConfig":"123"},{"size":24604,"mtime":1633422144715,"results":"220","hashOfConfig":"123"},{"size":11247,"mtime":1633257141111,"results":"221","hashOfConfig":"123"},{"size":5059,"mtime":1632916185132,"results":"222","hashOfConfig":"123"},{"size":5042,"mtime":1645537448171,"results":"223","hashOfConfig":"123"},{"size":125,"mtime":1612589306000,"results":"224","hashOfConfig":"123"},{"size":1130,"mtime":1632832286545,"results":"225","hashOfConfig":"123"},{"size":549,"mtime":1632832288875,"results":"226","hashOfConfig":"123"},{"size":10801,"mtime":1645897612694,"results":"227","hashOfConfig":"123"},{"size":5831,"mtime":1613800854000,"results":"228","hashOfConfig":"123"},{"size":3312,"mtime":1613551494000,"results":"229","hashOfConfig":"123"},{"size":1995,"mtime":1611811300000,"results":"230","hashOfConfig":"123"},{"size":310,"mtime":1611922078000,"results":"231","hashOfConfig":"123"},{"size":1234,"mtime":1611809648000,"results":"232","hashOfConfig":"123"},{"size":581,"mtime":1611811128000,"results":"233","hashOfConfig":"123"},{"size":2247,"mtime":1645540205938,"results":"234","hashOfConfig":"123"},{"size":3465,"mtime":1645540748317,"results":"235","hashOfConfig":"123"},{"size":3180,"mtime":1645539979639,"results":"236","hashOfConfig":"123"},{"size":3332,"mtime":1645540966264,"results":"237","hashOfConfig":"123"},{"size":4511,"mtime":1645542186470,"results":"238","hashOfConfig":"123"},{"size":5264,"mtime":1645896929104,"results":"239","hashOfConfig":"123"},{"size":681,"mtime":1645895963634,"results":"240","hashOfConfig":"123"},{"size":316,"mtime":1645895902692,"results":"241","hashOfConfig":"123"},{"size":491,"mtime":1645896018531,"results":"242","hashOfConfig":"123"},{"size":1178,"mtime":1645896158108,"results":"243","hashOfConfig":"123"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},"1wmpq6w",{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"246"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"246"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"246"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"246"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"246"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"246"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"246"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"246"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"246"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ashik/Desktop/health os/helthos/src/index.js",[],["497","498"],"/Users/ashik/Desktop/health os/helthos/src/App.js",["499","500","501"],"import React from \"react\"\n\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\"\nimport { connect, useSelector } from \"react-redux\"\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\"\n\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"\n\nimport VerticalLayout from \"./components/VerticalLayout/\"\nimport NonAuthLayout from \"./components/NonAuthLayout\"\n\n// Import scss\nimport \"./assets/scss/theme.scss\"\n\n\nconst App = props => {\n  const hello = useSelector(state => state)\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          {authRoutes.map((route, idx) => (\n            <Authmiddleware\n              path={route.path}\n              layout={NonAuthLayout}\n              component={route.component}\n              key={idx}\n              isAuthProtected={false}\n            />\n          ))}\n\n          {userRoutes.map((route, idx) => (\n            <Authmiddleware\n              path={route.path}\n              layout={VerticalLayout}\n              component={route.component}\n              key={idx}\n              isAuthProtected={true}\n              exact\n            />\n          ))}\n        </Switch>\n      </Router>\n    </React.Fragment>\n  )\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    layout: {\n      layoutType: \"vertical\",\n      layoutWidth: \"fluid\",\n      leftSideBarTheme: \"dark\",\n      leftSideBarType: \"default\",\n      topbarTheme: \"light\",\n      isPreloader: false,\n      showRightSidebar: false,\n      isMobile: false,\n      showSidebar: true,\n      leftMenu: false,\n    }\n  }\n}\n\n// export default connect(mapStateToProps, null)(App)\nexport default App","/Users/ashik/Desktop/health os/helthos/src/serviceWorker.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/NonAuthLayout.js",[],"/Users/ashik/Desktop/health os/helthos/src/routes/middleware/Authmiddleware.js",[],"/Users/ashik/Desktop/health os/helthos/src/routes/allRoutes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/reducers.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/sagas.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/actions.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/Header.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/Sidebar.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/Footer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/layout/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/layout/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Dashboard/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/Rightbar.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/Login.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/Register.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/ForgetPassword.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Authentication/Logout.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/Generic/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/Form/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/login/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/login/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/register/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Form/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Form/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Group/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Category/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Group/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Category/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/register/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Product/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Product/saga.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/Unit/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/Providers/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/Category/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/Groups/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/SubGroup/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Products/Product/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Suppliers/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Admin/Employe/index.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/Inventory/Suppliers/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Product/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Product/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/actions.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Unit/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/register/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Category/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Group/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/profile/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Provider/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Category/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Subgroup/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Group/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/helpers/backend_helper.js",[],"/Users/ashik/Desktop/health os/helthos/src/helpers/fakebackend_helper.js",[],"/Users/ashik/Desktop/health os/helthos/src/helpers/firebase_helper.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Generic/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Form/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/product/Form/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/actions.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/forgetpwd/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/register/actions.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/login/actions.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/auth/login/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Common/Breadcrumb.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductFormModel.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductGenericModel.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductSubgroupModel.js",["502"],"import React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport {\n    Row,\n    Col,\n    Button,\n    Label,\n} from \"reactstrap\"\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addSubgroup, getGroup } from \"../../../store/actions\"\nimport Select from \"react-select\"\n\nimport makeAnimated from 'react-select/animated';\nconst animatedComponents = makeAnimated();\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default function ProductProviderModel(props) {\n    const [name, setName] = useState(\"\");\n    const [description, setDec] = useState(\"\");\n    const [selectedGroup, setselectedGroup] = useState(null)\n    const [optionGroup, setsoptionGroup] = useState(null)\n    const groups = useSelector(state => state.Group.groups)\n    const dispatch = useDispatch()\n    const handelSubmit = () => {\n        const data = { name: name, description: description, edit: props.editeData ? props.editeData._id : false, group_id: selectedGroup.value }\n        dispatch(addSubgroup(data))\n        props.onClose()\n        setName('')\n        setDec('')\n        setselectedGroup(null)\n    }\n    useEffect(() => {\n\n        if (props.editeData) {\n            const pregroup = groups.find(g => g._id === props.editeData.group_id)\n            setName(props.editeData.name)\n            setDec(props.editeData.description)\n            setselectedGroup({ value: pregroup._id, label: pregroup.name })\n        }\n        if (groups.length === 0) {\n            dispatch(getGroup())\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.editeData])\n    useEffect(() => {\n        if (groups.length === 0) {\n            dispatch(getGroup())\n        }\n\n        const formatedGroup = []\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        groups.map(group => {\n            formatedGroup.push({\n                value: group._id,\n                label: group.name\n            })\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        setsoptionGroup(formatedGroup)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.open])\n    function handleSelectGroup(selectedGroup) {\n        setselectedGroup(selectedGroup)\n        // console.log(selectedGroup.value)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={props.onClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <AvForm className=\"needs-validation\">\n                    <DialogTitle id=\"alert-dialog-slide-title\">{props.editeData ? \"Edit \" : \"Add\"}{\" Product Subgroup\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n\n                            <Row>\n                                <Col xl=\"12\">\n                                    <Row>\n                                        <Col md=\"12\">\n                                            <div className=\"mb-3\">\n                                                <Label htmlFor=\"name\">Name</Label>\n                                                <AvField\n                                                    name=\"firstname\"\n                                                    placeholder=\"Name\"\n                                                    type=\"text\"\n                                                    errorMessage=\"Enter form name\"\n                                                    className=\"form-control\"\n                                                    validate={{ required: { value: true } }}\n                                                    id=\"name\"\n                                                    value={name}\n                                                    onChange={(e) => setName(e.target.value)}\n                                                />\n                                            </div>\n                                        </Col>\n                                        <Col md=\"12\">\n                                            <div className=\"mb-3\">\n                                                <div className=\"mb-3\">\n                                                    <Label>Group</Label>\n\n                                                    <Select\n                                                        components={animatedComponents}\n                                                        value={selectedGroup}\n                                                        onChange={(w) => {\n                                                            handleSelectGroup(w)\n                                                        }}\n                                                        options={optionGroup}\n                                                        classNamePrefix=\"select2-selection\"\n                                                    />\n                                                </div>\n                                            </div>\n                                        </Col>\n                                        <Col md=\"12\">\n                                            <div className=\"mb-3\">\n                                                <Label htmlFor=\"Description\">Description</Label>\n                                                <AvField\n                                                    name=\"lastname\"\n                                                    placeholder=\"Description\"\n                                                    type=\"textarea\"\n                                                    rows=\"5\"\n                                                    errorMessage=\"Enter Description\"\n                                                    className=\"form-control\"\n                                                    validate={{ required: { value: false } }}\n                                                    id=\"Description\"\n                                                    value={description}\n                                                    onChange={(e) => setDec(e.target.value)}\n                                                />\n                                            </div>\n                                        </Col>\n\n                                    </Row>\n\n                                </Col>\n                            </Row>\n\n\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={props.onClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" type=\"submit\" onClick={handelSubmit}>\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </AvForm>\n            </Dialog>\n        </div>\n    );\n}","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductModel.js",["503"],"import React, { useState, useEffect } from 'react';\nimport {\n    Row,\n    Col,\n    Button,\n    Label,\n    Input,\n    Modal\n} from \"reactstrap\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getCategory, getProvider, getSubgroup, getforms,\n    getUnit, getGenerics, getGroup, addProduct\n} from \"../../../store/actions\"\nimport Select from \"react-select\"\nimport ProductCategoryModel from \"../../Models/Product/ProductCategoryModel\"\nimport ProductFormModel from \"../../Models/Product/ProductFormModel\"\nimport ProductGenericModel from \"../../Models/Product/ProductGenericModel\"\nimport ProductProvidersModel from \"../../Models/Product/ProductProvidersModel\"\nimport ProductSubgroupModel from \"../../Models/Product/ProductSubgroupModel\"\n\n\n\nexport default function ProductProviderModel(props) {\n    const [categoryOptions, setCategoryOptions] = useState(null);\n    const [providerOptions, setProviderOptions] = useState(null);\n    const [subGroupOptions, setSubGroupOptions] = useState(null);\n    const [formOptions, setformOptions] = useState(null);\n    const [genericOptions, setgenericOptions] = useState(null);\n    const [unitOptions, setunitOptions] = useState(null);\n    const [isNeedGroup, setIsNeedGroup] = useState(false);\n    const [categoryModel, setcategoryModel] = useState(false);\n    const [providerModel, setproviderModel] = useState(false);\n    const [subgroupModel, setsubgroupModel] = useState(false);\n    const [formModel, setformModel] = useState(false);\n    const [genericModel, setgenericModel] = useState(false);\n\n    const [formData, setFormData] = useState({\n        name: \"\",\n        strength: \"\",\n        category: \"\",\n        provider: \"\",\n        product_code: \"\",\n        subgroup: \"\",\n        form: \"\",\n        generic: \"\",\n        description: \"\",\n        purchase_price: \"\",\n        sale_price: \"\",\n        primary_unit: \"\",\n        secondary_unit: \"\",\n        conversion_factor: \"\",\n    })\n\n\n\n\n\n\n    // eslint-disable-next-line\n\n    // const [subgroup, setSubgroup] = useState(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    const dispatch = useDispatch()\n    const { Group, Category, Provider, Subgroup, Form, Generic, Unit } = useSelector(state => state)\n    const handelSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addProduct(formData))\n    }\n    useEffect(() => {\n        if (props.editeData) {\n            const d = props.editeData\n            d.group.name.toLowerCase() === 'medicine' && setIsNeedGroup(true)\n            setFormData({\n                name: d.name,\n                strength: d.strength,\n                category: { value: d.category._id, label: d.category.name },\n                provider: { value: d.provider._id, label: d.provider.name },\n                product_code: d.product_code,\n                subgroup: { value: d.subgroup._id, label: d.subgroup.name },\n                form: { value: d.form._id, label: d.form.name },\n                generic: { value: d.generic._id, label: d.generic.name },\n                description: d.description,\n                purchase_price: d.purchase_price,\n                sale_price: d.sale_price,\n                primary_unit: { value: d.primary_unit._id, label: d.primary_unit.name },\n                secondary_unit: { value: d.secondary_unit._id, label: d.secondary_unit.name },\n                conversion_factor: d.conversion_factor,\n            })\n\n        } else {\n            setFormData({\n                name: \"\",\n                strength: \"\",\n                category: \"\",\n                provider: \"\",\n                product_code: \"\",\n                subgroup: \"\",\n                form: \"\",\n                generic: \"\",\n                description: \"\",\n                purchase_price: \"\",\n                sale_price: \"\",\n                primary_unit: \"\",\n                secondary_unit: \"\",\n                conversion_factor: \"\",\n            })\n        }\n    }, [props.editeData])\n\n\n    useEffect(() => {\n        // eslint-disable-next-line\n        if (Category.categories.length === 0) {\n            dispatch(getCategory())\n        }\n        if (Provider.providers.length === 0) {\n            dispatch(getProvider())\n        }\n        if (Subgroup.subgroups.length === 0) {\n            dispatch(getSubgroup())\n        }\n        if (Form.forms.length === 0) {\n            dispatch(getforms())\n        }\n        if (Generic.generics.length === 0) {\n            dispatch(getGenerics())\n        }\n        if (Unit.units.length === 0) {\n            dispatch(getUnit())\n        }\n        if (Group.groups.length === 0) {\n            dispatch(getGroup())\n        }\n\n        const formatedCategory = []\n        const formatedProvider = []\n        const formatedsubGroup = []\n        const formatedForm = []\n        const formatedGeneric = []\n        const formatedUnit = []\n        Category.categories.map(group => formatedCategory.push({\n            value: group._id,\n            label: group.name\n        }))\n        Provider.providers.map(group => formatedProvider.push({\n            value: group._id,\n            label: group.name\n        }))\n        Generic.generics.map(group => formatedGeneric.push({\n            value: group._id,\n            label: group.name\n        }))\n        Unit.units.map(group => formatedUnit.push({\n            value: group._id,\n            label: group.name\n        }))\n        Form.forms.map(group => formatedForm.push({\n            value: group._id,\n            label: group.name\n        }))\n        Group.groups.map((group) => {\n            const xgroup = {\n                label: group.name,\n                options: []\n            }\n            Subgroup.subgroups.filter(g => g.group_id === group._id).map(gmap => xgroup.options.push({\n                value: gmap._id,\n                label: gmap.name\n            }))\n            formatedsubGroup.push(xgroup)\n        })\n        setCategoryOptions(formatedCategory)\n        setProviderOptions(formatedProvider)\n        setSubGroupOptions(formatedsubGroup)\n        setgenericOptions(formatedGeneric)\n        setformOptions(formatedForm)\n        setunitOptions(formatedUnit)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.open])\n\n\n    const handelGroupChange = (e) => {\n        //    const subgroup = Subgroup.subgroups.find(x=>x._id===e.value)\n        const groupName = Group.groups.find(x => x._id === Subgroup.subgroups.find(x => x._id === e.value).group_id).name\n        if (groupName.toLowerCase() === 'medicine') {\n            setIsNeedGroup(true)\n        } else {\n            setIsNeedGroup(false)\n        }\n        // console.log(groupName)\n    }\n    // console.log(props.editeData)\n\n    return (\n        <div>\n\n            <ProductCategoryModel open={categoryModel} onClose={() => setcategoryModel(false)} editeData={false} />\n            <ProductFormModel open={formModel} onClose={() => setformModel(false)} editeData={false} />\n            <ProductGenericModel open={genericModel} onClose={() => setgenericModel(false)} editeData={false} />\n            <ProductProvidersModel open={providerModel} onClose={() => setproviderModel(false)} editeData={false} />\n            <ProductSubgroupModel open={subgroupModel} onClose={() => setsubgroupModel(false)} editeData={false} />\n            <Modal\n                size=\"lg\"\n                isOpen={props.open}\n                toggle={() => {\n                    props.onClose()\n\n                }}\n                centered={true}\n            >\n                <form\n                    className=\"needs-validation\"\n                    method=\"post\"\n                    id=\"tooltipForm\"\n                    onSubmit={e => {\n                        handelSubmit(e)\n                    }}\n                >\n                    <div className=\"modal-header\">\n                        <h5\n                            className=\"modal-title mt-0\"\n                            id=\"myLargeModalLabel\"\n                        >\n                            Large Modal\n                        </h5>\n                        <button\n                            onClick={() => {\n                                props.onClose()\n                            }}\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <Row>\n                            <Col md=\"5\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"name\">\n                                        COMMERCIAL NAME\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"name\"\n                                        placeholder=\"Commercial Name\"\n                                        required\n                                        defaultValue={formData.name}\n                                        onChange={(e) => formData.name = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"3\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"strength\">STRENGTH</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"strength\"\n                                        placeholder=\"Strength\"\n                                        defaultValue={formData.strength}\n                                        onChange={(e) => formData.strength = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n                            <Col md=\"4\">\n                                <div className=\"mb-3 position-relative row\">\n                                    <Label htmlFor=\"category\">\n                                        CATEGORY\n                                    </Label>\n                                    <div className=\"col-md-8\">\n                                        <Select\n                                            onChange={(e) => formData.category = e.value}\n                                            placeholder=\"Select Category\"\n                                            options={categoryOptions}\n                                            defaultValue={formData.category}\n                                            classNamePrefix=\"select2-selection\"\n                                        />\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <div className=\"input-group-prepend\">\n                                            <span\n                                                onClick={() => setcategoryModel(true)}\n                                                type=\"none\"\n                                                className=\"input-group-text btn-outline-info btn\"\n                                                style={{ borderColor: \" #d7d6d6\" }}\n                                            >\n                                                <i className=\"uil-plus\"></i>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative row\">\n                                    <Label htmlFor=\"validationTooltip03\">MANUFACTURING COMPANY</Label>\n                                    <div className=\"col-md-10\">\n                                        {/* <Select\n                                            name=\"form-field-name\"\n                                            // value={value}\n                                            // onChange={this.handleChange}\n                                            options={[\n                                                { value: 'one', label: 'One' },\n                                                { value: 'two', label: 'Two' },\n                                            ]}\n                                        /> */}\n                                        <Select\n                                            clearable={true}\n                                            onChange={(e) => formData.provider = e.value}\n                                            defaultValue={formData.provider}\n                                            placeholder=\"Select a Company\"\n                                            options={providerOptions}\n                                            classNamePrefix=\"select2-selection\"\n                                        />\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <div className=\"input-group-prepend\">\n                                            <span\n                                                onClick={() => setproviderModel(true)}\n                                                type=\"none\"\n                                                className=\"input-group-text btn-outline-info btn\"\n                                                style={{ borderColor: \" #d7d6d6\" }}\n                                            >\n                                                <i className=\"uil-plus\"></i>\n                                            </span>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"mb-3 position-relative row\">\n                                    <Label htmlFor=\"validationTooltip03\">SUBGROUP</Label>\n                                    <div className=\"col-md-10\">\n                                        <Select\n                                            onChange={(e) => {\n                                                handelGroupChange(e)\n                                                formData.subgroup = e.value\n                                            }}\n                                            defaultValue={formData.subgroup}\n                                            placeholder=\"Select a Subgroup\"\n                                            options={subGroupOptions}\n                                            classNamePrefix=\"select2-selection\"\n                                        />\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <div className=\"input-group-prepend\">\n                                            <span\n                                                onClick={() => setsubgroupModel(true)}\n                                                type=\"none\"\n                                                className=\"input-group-text btn-outline-info btn\"\n                                                style={{ borderColor: \" #d7d6d6\" }}\n                                            >\n                                                <i className=\"uil-plus\"></i>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                {isNeedGroup && (\n                                    <div className=\"mb-3 position-relative row\" >\n                                        <Label htmlFor=\"validationTooltip03\">GENERIC</Label>\n                                        <div className=\"col-md-10\">\n                                            <Select\n                                                onChange={(e) => formData.generic = e.value}\n                                                placeholder=\"Select a Generic\"\n                                                defaultValue={formData.generic}\n                                                options={genericOptions}\n                                                classNamePrefix=\"select2-selection\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-2\">\n                                            <div className=\"input-group-prepend\">\n                                                <span\n                                                    onClick={() => setgenericModel(true)}\n                                                    type=\"none\"\n                                                    className=\"input-group-text btn-outline-info btn\"\n                                                    style={{ borderColor: \" #d7d6d6\" }}\n                                                >\n                                                    <i className=\"uil-plus\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n\n\n                                <div className=\"mb-3 position-relative row\">\n                                    <div className=\"col-md-6\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                                        <Label htmlFor=\"p_price\">PURCHASE PRICE</Label>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <Input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"p_price\"\n                                            defaultValue={formData.purchase_price}\n                                            placeholder=\"Purchase Price\"\n                                            onChange={(e) => formData.purchase_price = e.target.value}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"mb-3 position-relative row\">\n                                    <div className=\"col-md-6\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                                        <Label htmlFor=\"s_price\">SALES PRICE</Label>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <Input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"s_price\"\n                                            placeholder=\"Sales Price\"\n                                            defaultValue={formData.sale_price}\n                                            onChange={(e) => formData.sale_price = e.target.value}\n                                        />\n                                    </div>\n                                </div>\n\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"code\">CODE</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"code\"\n                                        placeholder=\"State\"\n                                        defaultValue={formData.product_code}\n                                        onChange={(e) => formData.product_code = e.target.value}\n                                    />\n\n                                </div>\n                                {isNeedGroup && (\n                                    <div className=\"mb-3 position-relative row\">\n                                        <Label htmlFor=\"code\">FORM</Label>\n                                        <div className=\"col-md-10\">\n                                            <Select\n                                                onChange={(e) => formData.form = e.value}\n                                                placeholder=\"Select a Form\"\n                                                options={formOptions}\n                                                defaultValue={formData.form}\n                                                classNamePrefix=\"select2-selection\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-2\">\n                                            <div className=\"input-group-prepend\">\n                                                <span\n                                                    onClick={() => setformModel(true)}\n                                                    type=\"none\"\n                                                    className=\"input-group-text btn-outline-info btn\"\n                                                    style={{ borderColor: \" #d7d6d6\" }}\n                                                >\n                                                    <i className=\"uil-plus\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"DESCRIPTION\">DESCRIPTION</Label>\n                                    <Input\n                                        type=\"textarea\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                        id=\"DESCRIPTION\"\n                                        defaultValue={formData.description}\n                                        placeholder=\"State\"\n                                        onChange={(e) => formData.description = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"4\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"validationTooltip03\">PRIMARY UNIT</Label>\n                                    <Select\n                                        // value={selectedGroup}\n                                        onChange={(e) => formData.primary_unit = e.value}\n                                        placeholder=\"Select a Unit\"\n                                        options={unitOptions}\n                                        defaultValue={formData.primary_unit}\n                                        classNamePrefix=\"select2-selection\"\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"4\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"validationTooltip03\">SECONDARY UNIT</Label>\n                                    <Select\n                                        // value={selectedGroup}\n                                        onChange={(e) => formData.secondary_unit = e.value}\n                                        defaultValue={formData.secondary_unit}\n                                        placeholder=\"Select a Unit\"\n                                        options={unitOptions}\n                                        classNamePrefix=\"select2-selection\"\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"4\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"conv_factor\">CONVERSION FACTOR</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"conv_factor\"\n                                        defaultValue={formData.conversion_factor}\n                                        placeholder=\"Conversion Factor\"\n                                        onChange={(e) => formData.conversion_factor = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n                        </Row>\n\n\n                    </div>\n\n                    <div className=\"modal-footer\">\n                        <Button type=\"submit\" className=\"btn btn-success\" > Submit </Button>\n                    </div>\n                </form>\n            </Modal>\n\n\n\n\n        </div>\n    );\n}","/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductGroupsModel.js",[],"/Users/ashik/Desktop/health os/helthos/src/helpers/url_helper.js",[],"/Users/ashik/Desktop/health os/helthos/src/helpers/api_helper.js",[],"/Users/ashik/Desktop/health os/helthos/src/helpers/api.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductCategoryModel.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Models/Admin/EmployeeModel.js",["504"],"import React, { useState, useEffect } from 'react';\n\nimport {\n    Row,\n    Col,\n    Button,\n    Label,\n    Input,\n    Modal,\n\n} from \"reactstrap\"\nimport { useDispatch } from 'react-redux';\nimport {\n    addSupplier\n} from \"../../../store/actions\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"flatpickr/dist/themes/material_blue.css\"\nimport Radio from '@material-ui/core/Radio';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup } from '@material-ui/core';\nexport default function EmployeeModel(props) {\n    const [file, setfile] = useState(null)\n    const [formData, setFormData] = useState({\n        first_name: \"\",\n        last_name: \"\",\n        designation: \"\",\n        joining_date: \"\",\n        registration_number: \"\",\n        dob: \"\",\n        gender: 0,\n        email: \"\",\n        phone: \"\",\n        nid: \"\",\n        birth_id: \"\",\n        permanent_address: \"\",\n        present_address: \"\",\n        fathers_name: \"\",\n        mothers_name: \"\",\n        husbands_name: \"\",\n        balance: \"\",\n        remarks: \"\",\n        status: \"\",\n        password: \"\",\n        repassword: \"\",\n    })\n\n\n    useEffect(() => {\n        setFormData(formData)\n    }, [setFormData])\n\n    // eslint-disable-next-line\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    const dispatch = useDispatch()\n    // const { Supplier } = useSelector(state => state)\n    const handelSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addSupplier(formData))\n        props.onClose()\n        setFormData({\n            company_name: \"\",\n            contact_person: \"\",\n            contact_person_address: \"\",\n            contact_person_number: \"\",\n            email: \"\",\n            phone: \"\",\n            opening_balance: \"\",\n            joining_date: \"\",\n        })\n    }\n    useEffect(() => {\n        if (props.editeData) {\n            const d = props.editeData\n            // d.group.name.toLowerCase() === 'medicine' && setIsNeedGroup(true)\n            setFormData({\n                company_name: d.company_name,\n                contact_person: d.contact_person,\n                contact_person_address: d.contact_person_address,\n                contact_person_number: d.contact_person_number,\n                email: d.email,\n                phone: d.phone,\n                opening_balance: d.opening_balance,\n                joining_date: d.joining_date,\n            })\n\n        }\n    }, [props.editeData])\n\n\n\n    useEffect(() => {\n        // eslint-disable-next-line\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.open])\n\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n        return [day, month, year].join('-');\n    }\n\n\n    return (\n        <div>\n            <Modal\n                size=\"lg\"\n                isOpen={props.open}\n                toggle={() => {\n                    props.onClose()\n                }}\n                centered={true}\n            >\n                <form\n                    className=\"needs-validation\"\n                    method=\"post\"\n                    id=\"tooltipForm\"\n                    onSubmit={e => {\n                        handelSubmit(e)\n                    }}\n                >\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title mt-0\" id=\"myLargeModalLabel\" >  {props.editeData ? \"Edit \" : \"Add\"} Suppliers </h5>\n                        <button\n                            onClick={() => props.onClose()}\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <Col md=\"6\">\n                            <div className=\"mb-3 position-relative imagehover\" style={{\n                                minHeight: 200,\n                                maxWidth: 200,\n                                border: '1px solid',\n                                borderColor: 'red',\n                                borderStyle: \"dashed\",\n                                backgroundImage: file ? `url(${URL.createObjectURL(file)})` : false,\n                                backgroundSize: \"200px 200px\",\n\n                            }}>\n                                {file ? <label className=\"text-center \" style={{ position: \"absolute\", top: \"45%\", left: \"25%\", marginRight: \"-50%\", transform: 'translate(-50 %, -50 %)', cursor: \"pointer\", textAlign: \"center\" }}>Update Picture</label>\n                                    :\n                                    <label onClick={() => setfile(null)} style={{ position: \"absolute\", top: \"45%\", left: \"25%\", marginRight: \"-50%\", transform: 'translate(-50 %, -50 %)', cursor: \"pointer\", textAlign: \"center\" }}>Upload picture</label>}\n\n                                <input type=\"file\" style={{ position: \"relative\", width: \"100%\", height: 200, opacity: 0, zIndex: 2 }} onChange={(e) => setfile(e.target.files[0])} />\n                            </div>\n                        </Col>\n\n\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"fname\">\n                                        FIRST NAME\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"fname\"\n                                        placeholder=\"First Name\"\n                                        required\n                                        defaultValue={formData.first_name}\n                                        onChange={(e) => formData.first_name = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"lname\">LAST NAME</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"lname\"\n                                        placeholder=\"Last Name\"\n                                        defaultValue={formData.last_name}\n                                        onChange={(e) => formData.last_name = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"DESIGNATION\">\n                                        DESIGNATION\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"DESIGNATION\"\n                                        placeholder=\"Designation\"\n                                        required\n                                        defaultValue={formData.designation}\n                                        onChange={(e) => formData.designation = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"jdate\">  JOINING DATE </Label>\n                                    <Flatpickr\n                                        className=\"form-control d-block\"\n                                        placeholder={formatDate(new Date())}\n                                        defaultValue={formData.joining_date}\n                                        options={{\n                                            altInput: true,\n                                            altFormat: \"d-m-Y\",\n                                            dateFormat: \"Y-m-d\"\n                                        }}\n                                        onChange={(e) => formData.joining_date = formatDate(e)}\n                                    />\n                                </div>\n                            </Col>\n                        </Row>\n\n\n\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"regno\"> REG NO </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"regno\"\n                                        placeholder=\"Registration Number\"\n                                        required\n                                        defaultValue={formData.registration_number}\n                                        onChange={(e) => formData.registration_number = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"Degrees\">DEGREES</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"Degrees\"\n                                        placeholder=\"Degrees\"\n                                        defaultValue={formData.degree}\n                                        onChange={(e) => {\n                                            formData.degree = e.target.value\n\n                                        }}\n                                    />\n\n                                </div>\n                            </Col>\n\n                        </Row>\n\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"dobirth\">DATE OF BIRTH</Label>\n                                    <Flatpickr\n                                        className=\"form-control d-block\"\n                                        placeholder={formatDate(new Date())}\n                                        defaultValue={formData.dob}\n                                        options={{\n                                            altInput: true,\n                                            altFormat: \"d-m-Y\",\n                                            dateFormat: \"Y-m-d\"\n                                        }}\n                                        onChange={(e) => formData.dob = formatDate(e)}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\" >\n                                    <FormControl component=\"fieldset\">\n                                        <FormLabel component=\"legend\">Gender</FormLabel>\n                                        <RadioGroup row aria-label=\"gender\" name=\"gender1\" onChange={(e) => console.log(e.target.value)}>\n                                            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                                            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                                            <FormControlLabel value=\"others\" control={<Radio />} label=\"OTHERS\" />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </Col>\n\n                        </Row>\n\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"email\"> EMAIL </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"email\"\n                                        placeholder=\"Email\"\n                                        required\n                                        defaultValue={formData.email}\n                                        onChange={(e) => formData.email = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"mobile\">MOBILE</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"mobile\"\n                                        placeholder=\"Mobile\"\n                                        defaultValue={formData.phone}\n                                        onChange={(e) => formData.phone = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n\n                        </Row>\n\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"NID\"> NID </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"NID\"\n                                        placeholder=\"NID\"\n                                        required\n                                        defaultValue={formData.nid}\n                                        onChange={(e) => formData.nid = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"address\">BIRTH ID</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"address\"\n                                        placeholder=\"Birth ID\"\n                                        defaultValue={formData.birth_id}\n                                        onChange={(e) => formData.birth_id = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n\n                        </Row>\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"PERMANENT\"> PERMANENT ADDRESS </Label>\n                                    <Input\n                                        type=\"textarea\"\n                                        // rows={}\n                                        className=\"form-control\"\n                                        id=\"PERMANENT\"\n                                        placeholder=\"NID\"\n                                        required\n                                        defaultValue={formData.permanent_address}\n                                        onChange={(e) => formData.permanent_address = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"PRESENT\">PRESENT ADDRESS</Label>\n                                    <Input\n                                        type=\"textarea\"\n                                        className=\"form-control\"\n                                        id=\"PRESENT\"\n                                        placeholder=\"Birth ID\"\n                                        defaultValue={formData.present_address}\n                                        onChange={(e) => formData.present_address = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n\n                        </Row>\n\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"FATHER\">FATHER'S NAME</Label>\n                                    <Input\n                                        type=\"text\"\n                                        // rows={}\n                                        className=\"form-control\"\n                                        id=\"FATHER\"\n                                        placeholder=\"Father's Name\"\n                                        required\n                                        defaultValue={formData.fathers_name}\n                                        onChange={(e) => formData.fathers_name = e.target.value}\n                                    />\n                                </div>\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"SPOUSE\">SPOUSE'S NAME</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"SPOUSE\"\n                                        placeholder=\"Spouse's Name\"\n                                        defaultValue={formData.mothers_name}\n                                        onChange={(e) => formData.mothers_name = e.target.value}\n                                    />\n\n                                </div>\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"Balance\">BALANCE</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"Balance\"\n                                        placeholder=\"Balance\"\n                                        defaultValue={formData.husbands_name}\n                                        onChange={(e) => formData.husbands_name = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"MOTHER\">MOTHER'S NAME</Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"MOTHER\"\n                                        placeholder=\"Mother's Name\"\n                                        defaultValue={formData.balance}\n                                        onChange={(e) => formData.balance = e.target.value}\n                                    />\n\n                                </div>\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"REMARKS\">REMARKS</Label>\n                                    <Input\n                                        type=\"textarea\"\n                                        rows=\"5\"\n                                        className=\"form-control\"\n                                        id=\"REMARKS\"\n                                        placeholder=\"Remarks\"\n                                        defaultValue={formData.remarks}\n                                        onChange={(e) => formData.remarks = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n\n                        </Row>\n\n\n                        <Col xl={12}>\n                            <div className=\"mt-4 mt-lg-0\">\n                                <h5 className=\"font-size-14 mb-3\">LOG IN ACCESS</h5>\n                                <div className=\"d-flex\">\n                                    <div className=\"square-switch\">\n                                        <input\n                                            type=\"checkbox\"\n                                            id=\"square-switch3\"\n                                            switch=\"bool\"\n                                            //   checked={sq3}\n                                            onChange={() => {\n                                                // setsq3(!sq3)\n                                            }}\n                                        />\n                                        <label\n                                            htmlFor=\"square-switch3\"\n                                            data-on-label=\"Yes\"\n                                            data-off-label=\"No\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n\n\n\n\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"PASSWORD\">PASSWORD </Label>\n                                    <Input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        id=\"PASSWORD\"\n                                        placeholder=\"Enter Password\"\n                                        required\n                                        defaultValue={formData.password}\n                                        onChange={(e) => formData.password = e.target.value}\n                                    />\n                                </div>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"mb-3 position-relative\">\n                                    <Label htmlFor=\"CONFIRM\">CONFIRM PASSWORD</Label>\n                                    <Input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        id=\"CONFIRM\"\n                                        placeholder=\"Enter Confirm Password\"\n                                        defaultValue={formData.repassword}\n                                        onChange={(e) => formData.repassword = e.target.value}\n                                    />\n\n                                </div>\n                            </Col>\n\n                        </Row>\n\n                    </div>\n\n                    <div className=\"modal-footer\">\n                        <Button type=\"submit\" className=\"btn btn-success\" > Submit </Button>\n                    </div>\n                </form >\n            </Modal >\n\n\n\n\n        </div >\n    );\n}","/Users/ashik/Desktop/health os/helthos/src/components/Models/Inventory/SupplierModel.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductProvidersModel.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/Models/Product/ProductUnitModel.js",[],"/Users/ashik/Desktop/health os/helthos/src/config.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/layout/actions.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/layout/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/VerticalLayout/SidebarContent.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js",[],"/Users/ashik/Desktop/health os/helthos/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js",[],"/Users/ashik/Desktop/health os/helthos/src/helpers/jwt-token-access/accessToken.js",[],"/Users/ashik/Desktop/health os/helthos/src/i18n.js",[],"/Users/ashik/Desktop/health os/helthos/src/common/languages.js",[],"/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Sales/index.js",["505","506","507","508","509","510","511","512"],"//import liraries\nimport React, { Component, useState } from \"react\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport {\n  TabContent,\n  TabPane,\n  Collapse,\n  NavLink,\n  NavItem,\n  Nav,\n  Card,\n  Row,\n  Col,\n  CardBody,\n  CardTitle,\n  Container,\n} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport SalesPage from \"./component/sales\";\nimport SalesReturnPage from \"./component/salseReturn\";\n// create a component\nconst Sales = () => {\n  const [activeTab, setactiveTab] = useState(\"1\");\n\n  function toggle(tab) {\n    if (activeTab !== tab) {\n      setactiveTab(tab);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <div className=\"container-fluid\">\n          <Breadcrumbs title=\"Products\" breadcrumbItem=\"Product List\" />\n\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                style={{ cursor: \"pointer\" }}\n                className={classnames({\n                  active: activeTab === \"1\",\n                })}\n                onClick={() => {\n                  toggle(\"1\");\n                }}\n              >\n                <span className=\"d-block d-sm-none\">\n                  <i className=\"fas fa-home\"></i>\n                </span>\n                <span className=\"d-none d-sm-block\">Sales</span>\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                style={{ cursor: \"pointer\" }}\n                className={classnames({\n                  active: activeTab === \"2\",\n                })}\n                onClick={() => {\n                  toggle(\"2\");\n                }}\n              >\n                <span className=\"d-block d-sm-none\">\n                  <i className=\"far fa-user\"></i>\n                </span>\n                <span className=\"d-none d-sm-block\">Sales Return</span>\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={activeTab} className=\"\">\n            <TabPane tabId=\"1\">\n              <SalesPage />\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <SalesReturnPage />\n            </TabPane>\n          </TabContent>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Sales;\n","/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Sales/component/sales.js",["513","514"],"//import liraries\nimport React, { Component, useState } from \"react\";\nimport { Item, Menu, useContextMenu } from \"react-contexify\";\nimport { Card, CardBody, CardTitle, Col, Row, Table } from \"reactstrap\";\nimport SalesModel from \"../../../../components/Models/Inventory/Sales/SalesModel\";\n\n// create a component\nconst SalesPage = () => {\n  const MENU_ID = \"menu-idx\";\n  const [open, setOpen] = useState(false);\n  const { show } = useContextMenu({\n    id: MENU_ID,\n  });\n  function handleItemClick({ event, props, triggerEvent, data }) {\n    if (props !== undefined) {\n      //   setOpen(true);\n      //   setEData(product.products.find((x) => x.id === props));\n    }\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    // setEData(false);\n  };\n  return (\n    <Row>\n      <Col className=\"col-12\">\n        <Card>\n          <CardBody>\n            <CardTitle>\n              Sales\n              <div className=\"float-end\">\n                <div className=\"mb-3\">\n                  <div\n                    to=\"#\"\n                    onClick={handleClickOpen}\n                    className=\"btn btn-success waves-effect waves-light\"\n                  >\n                    <i className=\"mdi mdi-plus me-2\"></i> Add Product\n                  </div>\n                  {/* <SalesModel /> */}\n                  <SalesModel\n                    open={open}\n                    onClose={handleClose}\n                    // editeData={eData}\n                  />\n                </div>\n              </div>\n            </CardTitle>\n            <div className=\"mt-5\">\n              <Table className=\"table mb-0\">\n                <thead>\n                  <tr>\n                    <th>SL</th>\n                    <th>Name</th>\n                    <th>PRICE</th>\n                    <th>COMPANY</th>\n                    <th>FORM</th>\n                    <th>GROUP</th>\n                    <th>SUBGROUP</th>\n                    <th>GENERIC</th>\n                    {/* <th>DESCRIPTION</th> */}\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* {product.products.map((row, index) => (\n                    <tr\n                      key={index}\n                      id={`${row.id}`}\n                      onContextMenu={displayMenu}\n                    >\n                      <td>{index + 1}</td>\n                      <td>\n                        {row.form && row.form.name.substring(0, 3)}{\" \"}\n                        <strong>{row.name} </strong>\n                        <em>{row.strength}</em>\n                        <br />\n                        {row.provider && row.provider.name}\n                      </td>\n                      <td>{row.sale_price}</td>\n                      <td>{row.provider && row.provider.name}</td>\n                      <td>{row.form && row.form.name}</td>\n                      <td>{row.subgroup && row.subgroup.name}</td>\n                      <td>{row.subgroup && row.group.name}</td>\n                      <td>{row.generic && row.generic.name}</td>\n                    </tr>\n                  ))} */}\n                </tbody>\n              </Table>\n            </div>\n            <Menu id={MENU_ID}>\n              <Item onClick={handleItemClick}> Edit </Item>\n              <Item onClick={handleItemClick}> Delete </Item>\n            </Menu>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SalesPage;\n","/Users/ashik/Desktop/health os/helthos/src/pages/Inventory/Sales/component/salseReturn.js",["515","516"],"//import liraries\nimport React, { Component } from \"react\";\nimport { Item, Menu, useContextMenu } from \"react-contexify\";\nimport { Card, CardBody, CardTitle, Col, Row, Table } from \"reactstrap\";\n\n// create a component\nconst SalesReturnPage = () => {\n  const MENU_ID = \"menu-idx\";\n  const { show } = useContextMenu({\n    id: MENU_ID,\n  });\n  function handleItemClick({ event, props, triggerEvent, data }) {\n    if (props !== undefined) {\n      //   setOpen(true);\n      //   setEData(product.products.find((x) => x.id === props));\n    }\n  }\n  return (\n    <Row>\n      <Col className=\"col-12\">\n        <Card>\n          <CardBody>\n            <CardTitle>\n              Sales Return\n              <div className=\"float-end\">\n                <div className=\"mb-3\">\n                  <div\n                    to=\"#\"\n                    // onClick={handleClickOpen}\n                    className=\"btn btn-success waves-effect waves-light\"\n                  >\n                    <i className=\"mdi mdi-plus me-2\"></i> Add Product\n                  </div>\n                  {/* <ProductModel\n                    open={open}\n                    onClose={handleClose}\n                    editeData={eData}\n                  /> */}\n                </div>\n              </div>\n            </CardTitle>\n            <div className=\"mt-5\">\n              <Table className=\"table mb-0\">\n                <thead>\n                  <tr>\n                    <th>SL</th>\n                    <th>Name</th>\n                    <th>PRICE</th>\n                    <th>COMPANY</th>\n                    <th>FORM</th>\n                    <th>GROUP</th>\n                    <th>SUBGROUP</th>\n                    <th>GENERIC</th>\n                    {/* <th>DESCRIPTION</th> */}\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* {product.products.map((row, index) => (\n                    <tr\n                      key={index}\n                      id={`${row.id}`}\n                      onContextMenu={displayMenu}\n                    >\n                      <td>{index + 1}</td>\n                      <td>\n                        {row.form && row.form.name.substring(0, 3)}{\" \"}\n                        <strong>{row.name} </strong>\n                        <em>{row.strength}</em>\n                        <br />\n                        {row.provider && row.provider.name}\n                      </td>\n                      <td>{row.sale_price}</td>\n                      <td>{row.provider && row.provider.name}</td>\n                      <td>{row.form && row.form.name}</td>\n                      <td>{row.subgroup && row.subgroup.name}</td>\n                      <td>{row.subgroup && row.group.name}</td>\n                      <td>{row.generic && row.generic.name}</td>\n                    </tr>\n                  ))} */}\n                </tbody>\n              </Table>\n            </div>\n            <Menu id={MENU_ID}>\n              <Item onClick={handleItemClick}> Edit </Item>\n              <Item onClick={handleItemClick}> Delete </Item>\n            </Menu>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SalesReturnPage;\n","/Users/ashik/Desktop/health os/helthos/src/components/Models/Inventory/Sales/SalesModel.js",["517","518","519","520","521","522","523"],"import React, { useState, useEffect } from \"react\";\n\nimport Slide from \"@material-ui/core/Slide\";\nimport { Row, Col, Button, Label, Modal } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { useDispatch } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_blue.css\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default function SalesModel(props) {\n  const [name, setName] = useState(\"\");\n  const [description, setDec] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handelSubmit = () => {\n    const data = {\n      name: name,\n      description: description,\n      edit: props.editeData ? props.editeData._id : false,\n    };\n    // dispatch(addCategory(data));\n    props.onClose();\n    setName(\"\");\n    setDec(\"\");\n  };\n  useEffect(() => {\n    if (props.editeData) {\n      setName(props.editeData.name);\n      setDec(props.editeData.description);\n    }\n  }, [props.editeData]);\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n    return [day, month, year].join(\"-\");\n  }\n  return (\n    <div>\n      <Modal\n        size=\"lg\"\n        isOpen={props.open}\n        toggle={() => {\n          props.onClose();\n        }}\n        centered={true}\n      >\n        <form\n          className=\"needs-validation\"\n          method=\"post\"\n          id=\"tooltipForm\"\n          onSubmit={(e) => {\n            // handelSubmit(e);\n          }}\n        >\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title mt-0\" id=\"myLargeModalLabel\">\n              {props.editeData ? \"Edit \" : \"New\"}\n              {\" Sales\"}\n            </h5>\n            <button\n              onClick={() => {\n                props.onClose();\n              }}\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"row\">\n              <Col md=\"6\">\n                <div className=\"mb-3 position-relative\">\n                  <Label htmlFor=\"name\">DATE</Label>\n                  <Flatpickr\n                    className=\"form-control d-block\"\n                    placeholder={formatDate(new Date())}\n                    // defaultValue={formData.opening_balance}\n                    options={{\n                      altInput: true,\n                      altFormat: \"d-m-Y\",\n                      dateFormat: \"Y-m-d\",\n                    }}\n                    // onChange={(e) => (formData.joining_date = formatDate(e))}\n                  />\n                </div>\n              </Col>\n            </div>\n          </div>\n\n          <div className=\"modal-footer\">\n            <Button type=\"submit\" className=\"btn btn-success\">\n              {\" \"}\n              Submit{\" \"}\n            </Button>\n          </div>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n","/Users/ashik/Desktop/health os/helthos/src/pages/Accounts/Customer/index.js",["524"],"import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, CardBody, CardTitle, Table } from \"reactstrap\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport \"./datatables.scss\";\nimport { getProduct } from \"../../../store/actions\";\nimport ProductModel from \"../../../components/Models/Product/ProductModel\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Menu, Item, useContextMenu } from \"react-contexify\";\nimport \"react-contexify/dist/ReactContexify.css\";\nimport CustomerModal from \"../../../components/Models/Accounts/CustomerModel\";\nconst Customers = () => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [eData, setEData] = useState(false);\n  const product = useSelector((state) => state.Product);\n  const MENU_ID = \"menu-idx\";\n  const { show } = useContextMenu({\n    id: MENU_ID,\n  });\n  function handleItemClick({ event, props, triggerEvent, data }) {\n    if (props !== undefined) {\n      setOpen(true);\n      setEData(product.products.find((x) => x.id === props));\n    }\n  }\n  function displayMenu(e) {\n    show(e, { props: e.currentTarget.id });\n  }\n  useEffect(() => {\n    dispatch(getProduct());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setEData(false);\n  };\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <div className=\"container-fluid\">\n          <Breadcrumbs title=\"Accounts\" breadcrumbItem=\"Customer List\" />\n          <Row>\n            <Col className=\"col-12\">\n              <Card>\n                <CardBody>\n                  <CardTitle>\n                    Customer List\n                    <div className=\"float-end\">\n                      <div className=\"mb-3\">\n                        <div\n                          to=\"#\"\n                          onClick={handleClickOpen}\n                          className=\"btn btn-success waves-effect waves-light\"\n                        >\n                          <i className=\"mdi mdi-plus me-2\"></i> Add Customer\n                        </div>\n                        <CustomerModal\n                          open={open}\n                          onClose={handleClose}\n                          editeData={eData}\n                        />\n                      </div>\n                    </div>\n                  </CardTitle>\n                  <div className=\"mt-5\">\n                    <Table className=\"table mb-0\">\n                      <thead>\n                        <tr>\n                          <th>SL</th>\n                          <th>ID</th>\n                          <th>NAME</th>\n                          <th>SEX</th>\n                          <th>MOBILE</th>\n                          <th>PAYABLE</th>\n                          <th>RECEIVABLE</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {product.products.map((row, index) => (\n                          <tr\n                            key={index}\n                            id={`${row.id}`}\n                            onContextMenu={displayMenu}\n                          >\n                            <td>{index + 1}</td>\n                            <td>\n                              {row.form && row.form.name.substring(0, 3)}{\" \"}\n                              <strong>{row.name} </strong>\n                              <em>{row.strength}</em>\n                              <br />\n                              {row.provider && row.provider.name}\n                            </td>\n                            <td>{row.sale_price}</td>\n                            <td>{row.provider && row.provider.name}</td>\n                            <td>{row.form && row.form.name}</td>\n                            <td>{row.subgroup && row.subgroup.name}</td>\n                            <td>{row.subgroup && row.group.name}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                  <Menu id={MENU_ID}>\n                    <Item onClick={handleItemClick}> Edit </Item>\n                    <Item onClick={handleItemClick}> Delete </Item>\n                  </Menu>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Customers;\n","/Users/ashik/Desktop/health os/helthos/src/components/Models/Accounts/CustomerModel.jsx",["525","526","527","528","529","530","531","532","533","534","535","536"],"import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Button, Label, Input, Modal } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCustomer } from \"../../../store/actions\";\n\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\n\nexport default function CustomerModal(props) {\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    balance: \"\",\n    gender: \"\",\n    mobile: \"\",\n  });\n\n  // eslint-disable-next-line\n\n  // const [subgroup, setSubgroup] = useState(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const dispatch = useDispatch();\n  const { Group, Category, Provider, Subgroup, Form, Generic, Unit } =\n    useSelector((state) => state);\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    // dispatch(addCustomer(formData));\n  };\n\n  return (\n    <div>\n      <Modal\n        size=\"lg\"\n        isOpen={props.open}\n        toggle={() => {\n          props.onClose();\n        }}\n        centered={true}\n      >\n        <form\n          className=\"needs-validation\"\n          method=\"post\"\n          id=\"tooltipForm\"\n          onSubmit={(e) => {\n            handelSubmit(e);\n          }}\n        >\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title mt-0\" id=\"myLargeModalLabel\">\n              Add Customer\n            </h5>\n            <button\n              onClick={() => {\n                props.onClose();\n              }}\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Label htmlFor=\"lname\">MOBILE</Label>\n                <PhoneInput\n                  country={\"bd\"}\n                  onlyCountries={[\"bd\"]}\n                  inputStyle={{}}\n                  // value={this.state.phone}\n                  onChange={(mobile) => (formData.mobile = mobile)}\n                />\n              </div>\n              <Col md=\"6\">\n                <div className=\"mb-3 position-relative\">\n                  <Label htmlFor=\"lname\">FIRST NAME</Label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"lname\"\n                    placeholder=\"First Name\"\n                    defaultValue={formData.first_name}\n                    onChange={(e) => (formData.first_name = e.target.value)}\n                  />\n                </div>\n              </Col>\n              <Col md=\"6\">\n                <div className=\"mb-3 position-relative\">\n                  <Label htmlFor=\"lname\">LAST NAME</Label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"lname\"\n                    placeholder=\"Last Name\"\n                    defaultValue={formData.last_name}\n                    onChange={(e) => (formData.last_name = e.target.value)}\n                  />\n                </div>\n              </Col>\n              <Col md=\"6\">\n                <div className=\"mb-3 position-relative\">\n                  <Label htmlFor=\"lname\">BALANCE</Label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"lname\"\n                    placeholder=\"Last Name\"\n                    defaultValue={formData.balance}\n                    onChange={(e) => (formData.balance = e.target.value)}\n                  />\n                </div>\n              </Col>\n              <Col md=\"6\">\n                <div className=\"mb-3 position-relative\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Gender</FormLabel>\n                    <RadioGroup\n                      row\n                      aria-label=\"gender\"\n                      name=\"gender1\"\n                      onChange={(e) => (formData.gender = e.target.value)}\n                    >\n                      <FormControlLabel\n                        value=\"male\"\n                        control={<Radio />}\n                        label=\"Male\"\n                      />\n                      <FormControlLabel\n                        value=\"female\"\n                        control={<Radio />}\n                        label=\"Female\"\n                      />\n                      <FormControlLabel\n                        value=\"others\"\n                        control={<Radio />}\n                        label=\"Others\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </div>\n              </Col>\n            </div>\n          </div>\n\n          <div className=\"modal-footer\">\n            <Button type=\"submit\" className=\"btn btn-success\">\n              {\" \"}\n              Submit{\" \"}\n            </Button>\n          </div>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n","/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/action.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/actionTypes.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/reducer.js",[],"/Users/ashik/Desktop/health os/helthos/src/store/accounts/customer/saga.js",[],{"ruleId":"537","replacedBy":"538"},{"ruleId":"539","replacedBy":"540"},{"ruleId":"541","severity":1,"message":"542","line":4,"column":10,"nodeType":"543","messageId":"544","endLine":4,"endColumn":17},{"ruleId":"541","severity":1,"message":"545","line":17,"column":9,"nodeType":"543","messageId":"544","endLine":17,"endColumn":14},{"ruleId":"541","severity":1,"message":"546","line":49,"column":7,"nodeType":"543","messageId":"544","endLine":49,"endColumn":22},{"ruleId":"547","severity":1,"message":"548","line":60,"column":26,"nodeType":"549","messageId":"550","endLine":60,"endColumn":28},{"ruleId":"547","severity":1,"message":"548","line":163,"column":34,"nodeType":"549","messageId":"550","endLine":163,"endColumn":36},{"ruleId":"551","severity":1,"message":"552","line":50,"column":8,"nodeType":"553","endLine":50,"endColumn":21,"suggestions":"554"},{"ruleId":"541","severity":1,"message":"555","line":2,"column":17,"nodeType":"543","messageId":"544","endLine":2,"endColumn":26},{"ruleId":"541","severity":1,"message":"556","line":7,"column":3,"nodeType":"543","messageId":"544","endLine":7,"endColumn":11},{"ruleId":"541","severity":1,"message":"557","line":11,"column":3,"nodeType":"543","messageId":"544","endLine":11,"endColumn":7},{"ruleId":"541","severity":1,"message":"558","line":12,"column":3,"nodeType":"543","messageId":"544","endLine":12,"endColumn":6},{"ruleId":"541","severity":1,"message":"559","line":13,"column":3,"nodeType":"543","messageId":"544","endLine":13,"endColumn":6},{"ruleId":"541","severity":1,"message":"560","line":14,"column":3,"nodeType":"543","messageId":"544","endLine":14,"endColumn":11},{"ruleId":"541","severity":1,"message":"561","line":15,"column":3,"nodeType":"543","messageId":"544","endLine":15,"endColumn":12},{"ruleId":"541","severity":1,"message":"562","line":16,"column":3,"nodeType":"543","messageId":"544","endLine":16,"endColumn":12},{"ruleId":"541","severity":1,"message":"555","line":2,"column":17,"nodeType":"543","messageId":"544","endLine":2,"endColumn":26},{"ruleId":"541","severity":1,"message":"563","line":11,"column":11,"nodeType":"543","messageId":"544","endLine":11,"endColumn":15},{"ruleId":"541","severity":1,"message":"555","line":2,"column":17,"nodeType":"543","messageId":"544","endLine":2,"endColumn":26},{"ruleId":"541","severity":1,"message":"563","line":9,"column":11,"nodeType":"543","messageId":"544","endLine":9,"endColumn":15},{"ruleId":"541","severity":1,"message":"558","line":4,"column":10,"nodeType":"543","messageId":"544","endLine":4,"endColumn":13},{"ruleId":"541","severity":1,"message":"564","line":5,"column":10,"nodeType":"543","messageId":"544","endLine":5,"endColumn":16},{"ruleId":"541","severity":1,"message":"565","line":5,"column":18,"nodeType":"543","messageId":"544","endLine":5,"endColumn":25},{"ruleId":"541","severity":1,"message":"566","line":10,"column":7,"nodeType":"543","messageId":"544","endLine":10,"endColumn":17},{"ruleId":"541","severity":1,"message":"567","line":18,"column":9,"nodeType":"543","messageId":"544","endLine":18,"endColumn":17},{"ruleId":"541","severity":1,"message":"568","line":20,"column":9,"nodeType":"543","messageId":"544","endLine":20,"endColumn":21},{"ruleId":"541","severity":1,"message":"569","line":21,"column":11,"nodeType":"543","messageId":"544","endLine":21,"endColumn":15},{"ruleId":"541","severity":1,"message":"570","line":6,"column":8,"nodeType":"543","messageId":"544","endLine":6,"endColumn":20},{"ruleId":"541","severity":1,"message":"571","line":1,"column":27,"nodeType":"543","messageId":"544","endLine":1,"endColumn":36},{"ruleId":"541","severity":1,"message":"558","line":2,"column":10,"nodeType":"543","messageId":"544","endLine":2,"endColumn":13},{"ruleId":"541","severity":1,"message":"572","line":4,"column":10,"nodeType":"543","messageId":"544","endLine":4,"endColumn":21},{"ruleId":"541","severity":1,"message":"573","line":17,"column":20,"nodeType":"543","messageId":"544","endLine":17,"endColumn":31},{"ruleId":"541","severity":1,"message":"567","line":30,"column":9,"nodeType":"543","messageId":"544","endLine":30,"endColumn":17},{"ruleId":"541","severity":1,"message":"574","line":31,"column":11,"nodeType":"543","messageId":"544","endLine":31,"endColumn":16},{"ruleId":"541","severity":1,"message":"575","line":31,"column":18,"nodeType":"543","messageId":"544","endLine":31,"endColumn":26},{"ruleId":"541","severity":1,"message":"576","line":31,"column":28,"nodeType":"543","messageId":"544","endLine":31,"endColumn":36},{"ruleId":"541","severity":1,"message":"577","line":31,"column":38,"nodeType":"543","messageId":"544","endLine":31,"endColumn":46},{"ruleId":"541","severity":1,"message":"578","line":31,"column":48,"nodeType":"543","messageId":"544","endLine":31,"endColumn":52},{"ruleId":"541","severity":1,"message":"579","line":31,"column":54,"nodeType":"543","messageId":"544","endLine":31,"endColumn":61},{"ruleId":"541","severity":1,"message":"580","line":31,"column":63,"nodeType":"543","messageId":"544","endLine":31,"endColumn":67},"no-native-reassign",["581"],"no-negated-in-lhs",["582"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'hello' is assigned a value but never used.","'mapStateToProps' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["583"],"'Component' is defined but never used.","'Collapse' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Container' is defined but never used.","'show' is assigned a value but never used.","'AvForm' is defined but never used.","'AvField' is defined but never used.","'Transition' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'handelSubmit' is assigned a value but never used.","'data' is assigned a value but never used.","'ProductModel' is defined but never used.","'useEffect' is defined but never used.","'addCustomer' is defined but never used.","'setFormData' is assigned a value but never used.","'Group' is assigned a value but never used.","'Category' is assigned a value but never used.","'Provider' is assigned a value but never used.","'Subgroup' is assigned a value but never used.","'Form' is assigned a value but never used.","'Generic' is assigned a value but never used.","'Unit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"584","fix":"585"},"Update the dependencies array to be: [formData, setFormData]",{"range":"586","text":"587"},[1218,1231],"[formData, setFormData]"]